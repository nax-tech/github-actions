on:
  workflow_call:
    secrets:
      TOKEN:
        required: true
    inputs:
      target-env:
        description: 'Target environment (stg, prd)'
        type: string
        required: true
      tag:
        description: 'Tag to promote'
        type: string
        required: true
      github-actions-ref:
        description: 'Github-Actions repository reference (default: main)'
        type: string
        required: false
        default: 'main'

jobs:
  promote:
    name: Promote Tag to ${{ inputs.target-env }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Checkout github-actions
        uses: actions/checkout@v3
        with:
          repository: nax-platform/github-actions
          ref: ${{ inputs.github-actions-ref }}
          token: ${{ secrets.TOKEN }}
          path: github-actions

      - name: Get Digest from Release
        id: get_release
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        run: |
          gh release download ${{ inputs.tag }} --repo ${{ github.repository }} -p "digest.txt" -p "app.txt"
          cat digest.txt
          cat app.txt
          echo "digest=$(cat digest.txt)" >> $GITHUB_OUTPUT
          echo "app=$(cat app.txt)" >> $GITHUB_OUTPUT

      - name: Trigger update-digest
        run: |
          APP=${{ steps.get_release.outputs.app }}
          github-actions/.github/workflows/trigger-action.sh \
            --url ${{ vars.PLATFORM_DISPATCH_URL }} \
            --event_type update-digest \
            --token ${{ secrets.TOKEN }} \
            --client_payload "{\"repository\": \"${{ github.event.repository.name }}\", \"directory_name\": \"fe-$APP\", \"resource_directory_name\": \"${{ github.event.repository.name }}/apps/$APP\", \"image_name\": \"fe-$APP\", \"environment_dir\": \"${{ inputs.target-env }}\", \"digest\": \"${{ steps.get_release.outputs.digest }}\"}"

      - name: Update github release
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        run: |
            gh release view ${{ inputs.tag }} --repo ${{ github.repository }} --json body -q .body >> release_notes.md
            echo "Released to ${{ inputs.target-env }} by @${{ github.triggering_actor }} on $(date +'%Y-%m-%d %H:%M:%S') UTC" >> release_notes.md
            gh release edit ${{ inputs.tag }} --repo ${{ github.repository }} --notes-file release_notes.md
