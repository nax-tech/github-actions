name: DEV Environment Build

on:
  workflow_call:
    secrets:
      ARTIFACTORY_USERNAME:
        required: true
      ARTIFACTORY_IDENTITY_TOKEN:
        required: true
      UPDATE_MANIFEST_TOKEN:
        required: true
      NPM_GITHUB_TOKEN:
        required: true
    inputs:
      ARTIFACTORY_REGISTRY:
        required: true
        type: string
      AWS_ACCOUNT_ID:
        required: false
        type: string
      AWS_TFSTATE_BUCKET:
        required: false
        type: string

env:
  GITHUB_TOKEN: ${{ secrets.NPM_GITHUB_TOKEN }}

jobs:
  build-and-publish-snapshots:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup NodeJS 16
        uses: actions/setup-node@v1
        with:
          node-version: 16

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Get pnpm cache directory path
        id: pnpm-cache-dir-path
        run: echo "::set-output name=dir::$(pnpm config get cacheFolder)"

      - name: Cache pnpm dependencies
        uses: actions/cache@v2
        id: pnpm-cache
        with:
          path: |
            ${{ steps.pnpm-cache-dir-path.outputs.dir }}
            **\node_modules
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      - name: Install dependencies
        if: steps.pnpm-cache.outputs.cache-hit != 'true'
        run: pnpm install

      - name: Test
        run: |
          RUN=CI pnpm nx affected:test --base=origin/main~1 --parallel 5
          pnpm nx affected:lint --base=origin/main~1 --parallel 5

      - name: Build
        run: |
          pnpm nx affected:build --base=origin/main~1 --parallel 5 --prod --with-deps

      # - name: Set up Docker Buildx
      #   id: buildx
      #   uses: docker/setup-buildx-action@v2
      #   with:
      #     github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Login to Artifactory Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ inputs.ARTIFACTORY_REGISTRY }}
          username: ${{ secrets.ARTIFACTORY_USERNAME }}
          password: ${{ secrets.ARTIFACTORY_IDENTITY_TOKEN }}

      - name: Affected apps
        run: |
          APPS=$(pnpm nx print-affected --type=app --select=projects --base=origin/main~1 | cut -d, -f1)
          echo "Affected applications: $APPS"
          echo "AFFECTED_APPS=$(echo $APPS)" >> $GITHUB_ENV

      - name: Deploy
        run: |
          for APP in $AFFECTED_APPS
          do
            GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }} pnpm nx deploy $APP
            UPDATE_MANIFEST_TOKEN=${{ secrets.UPDATE_MANIFEST_TOKEN }} pnpm nx release $APP
            pnpm nx invalidate $APP
          done
