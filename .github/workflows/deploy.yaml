on:
  workflow_call:

name: Deploy Infrastructure

jobs:
  load_matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Check out repository
        uses: actions/checkout@v2
      - id: set-matrix
        name: matrix
        run: |
          EOF=$(dd if=/dev/urandom bs=15 count=1 status=none | base64)
          echo "matrix<<$EOF" >> $GITHUB_OUTPUT
          echo "{    \"include\": ${AWS_MATRIX} }"  >> $GITHUB_OUTPUT
          echo >> $GITHUB_OUTPUT
          echo "$EOF" >> $GITHUB_OUTPUT
  jv:
    environment: ${{ matrix.env }}
    needs: load_matrix
    strategy:
      fail-fast: true
      max-parallel: 1
      matrix: ${{fromJson(needs.load_matrix.outputs.matrix)}}
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1.2.1
        with:
          terraform_version: ${{ env.TERRAFORM_VERSION }}

      - name: Configure AWS credentials for shared services account
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: arn:aws:iam::${{ vars.ACCOUNT_ID }}:role/GithubActionsInfraRole
          aws-region: us-west-2

      - name: Run Terraform fmt
        id: fmt
        working-directory: terraform
        run: terraform fmt -check

      - name: Run Terraform init
        id: init
        working-directory: terraform
        run: |
          terraform init -input=false --backend-config="bucket=${TF_VAR_state_bucket}" --backend-config="key=${TF_VAR_jv}/terraform.tfstate" --backend-config="region=${TF_VAR_region}"
        env:
          TF_VAR_account_id: ${{ matrix.account_id }}
          TF_VAR_env: ${{ matrix.env }}
          TF_WORKSPACE: ${{ matrix.env }}

      - name: Terraform Validate
        id: validate
        working-directory: terraform
        run: terraform validate -no-color
        env:
          TF_VAR_account_id: ${{ matrix.account_id }}
          TF_VAR_env: ${{ matrix.env }}
          TF_WORKSPACE: ${{ matrix.env }}
      - name: Terraform Apply
        id: apply
        working-directory: terraform
        run: |
          terraform workspace list
          terraform apply -auto-approve -input=false
        env:
          TF_VAR_account_id: ${{ matrix.account_id }}
          TF_VAR_env: ${{ matrix.env }}
          TF_WORKSPACE: ${{ matrix.env }}
          TF_VAR_sso_url: ${{ secrets.SSO_URL }}
          TF_VAR_docker_json_config: ${{ secrets.ARTIFACTORY_DOCKERCONFIG }}
