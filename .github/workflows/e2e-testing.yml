name: E2E Tests

env:
  ARTIFACTORY_TOKEN: ${{ secrets.ARTIFACTORY_TOKEN }}

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'environment'
        required: true
        default: 'local_dev'
        type: choice
        options:
          - local_dev
          - dev
          - qa
      app:
        description: 'application'
        required: true
        default: 'webapp-e2e'
        type: choice
        options:
          - webapp-e2e
          - website-e2e

jobs:
  test-build:
    runs-on: ubuntu-latest
    env:
      ENV: ${{ github.event.inputs.environment || 'local_dev' }}
      APP: ${{ github.event.inputs.app || 'webapp-e2e' }}
    steps:
      - run:  env
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          fetch-depth: 0

      - name: Setup NodeJS 16
        uses: actions/setup-node@v1
        with:
          node-version: 16

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Get pnpm cache directory path
        id: pnpm-cache-dir-path
        run: echo "::set-output name=dir::$(pnpm config get cacheFolder)"

      - name: Cache pnpm dependencies
        uses: actions/cache@v3
        id: pnpm-cache
        with:
          path: |
            ${{ steps.pnpm-cache-dir-path.outputs.dir }}
            **\node_modules
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      - name: Cache Cypress binary
        uses: actions/cache@v3
        with:
          path: ~/.cache/Cypress
          key: cypress-${{ runner.os }}-cypress-${{ hashFiles('**/package.json') }}
          restore-keys: |
            cypress-${{ runner.os }}-cypress-

      - name: Install dependencies
        if: steps.pnpm-cache.outputs.cache-hit != 'true'
        run: pnpm install

      - name: E2E Tests DEV local
        if: ${{ env.ENV == 'local_dev' }}
        env:
          CYPRESS_ENVIRONMENT: 'dev'
        run: |
          RUN=CI pnpm nx e2e-parallel-local $APP --skip-nx-cache

      - name: E2E Tests DEV
        if: ${{ env.ENV == 'dev' }}
        env:
          CYPRESS_BASE_URL: 'https://d3npzvqlsc8z51.cloudfront.net/'
          CYPRESS_ENVIRONMENT: 'dev'
        run: |
          RUN=CI pnpm nx e2e-parallel $APP --skip-nx-cache

      - name: E2E Tests QA
        if: ${{ env.ENV == 'qa' }}
        env:
          CYPRESS_BASE_URL: 'https://d3npzvqlsc8z51.cloudfront.net/'
          CYPRESS_ENVIRONMENT: 'qa'
        run: |
          RUN=CI pnpm nx e2e-parallel $APP --skip-nx-cache

      - name: Merge test results into one
        run: |
          pnpm run report:merge
          pnpm run report:merge-junit

      - name: Generate HTML report
        run: pnpm run report:generate

      - name: Python setup
        if: always()
        uses: actions/setup-python@v3
        with:
          python-version: '3.x'
      - name: TestRail CLI upload results
        if: always()
        run: |
          pip install trcli
          trcli -n \
            -h https://naxgrp.testrail.io/ \
            --project "naxa-watercolor" \
            --username ${{ secrets.TESTRAIL_USERNAME }} \
            --password ${{ secrets.TESTRAIL_PASSWORD }} \
            parse_junit \
            --case-matcher "name" \
            --title "Automated Tests from GitHub workflow" \
            --close-run \
            --run-description ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }} \
            --file "apps/webapp-e2e/results/combined-report.xml"

